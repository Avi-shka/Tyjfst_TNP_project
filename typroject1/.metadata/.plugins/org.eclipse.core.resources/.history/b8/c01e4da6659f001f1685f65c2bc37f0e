package com.example;

import jakarta.servlet.ServletException;

import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;

import java.io.IOException;

import javax.security.auth.callback.NameCallback;
import javax.security.auth.callback.PasswordCallback;
import javax.security.auth.login.LoginContext;
import javax.security.auth.login.LoginException;

/**
 * Servlet implementation class LoginServlet
 */
@WebServlet("/login")
public class LoginServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public LoginServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		//response.getWriter().append("Served at: ").append(request.getContextPath());
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		response.setHeader("Access-Control-Allow-Origin", "http://localhost:3000"); 
		response.setHeader("Access-Control-Allow-Methods", "GET, POST, PUT, DELETE, OPTIONS");
		response.setHeader("Access-Control-Allow-Headers", "Content-Type, Authorization");
		
		 String username = request.getParameter("username"); 
		 String password = request.getParameter("password"); 
		 try { 
			 LoginContext lc = new LoginContext("MyLoginModule", new MyCallbackHandler(username, password)); 
			 lc.login();
			 HttpSession session = request.getSession();
			 session.setAttribute("user", username);
			 response.getWriter().write("Login successful");
			 }
		 catch (LoginException e) {
			 response.getWriter().write("Login failed: " + e.getMessage());
			 }
		 }
	}
class MyCallbackHandler implements javax.security.auth.callback.CallbackHandler {
	private String username;
	private String password; 
	public MyCallbackHandler(String username, String password) 
	{ this.username = username;
	this.password = password; 
	} 
	@Override 
	public void handle(javax.security.auth.callback.Callback[] callbacks) throws IOException, javax.security.auth.callback.UnsupportedCallbackException
	{ 
		for (javax.security.auth.callback.Callback callback : callbacks)
		{ if (callback instanceof NameCallback)
		{ ((NameCallback) callback).setName(username); 
		} else if (callback instanceof PasswordCallback) 
		{ ((PasswordCallback) callback).setPassword(password.toCharArray());
		} else { throw new javax.security.auth.callback.UnsupportedCallbackException(callback); 
		} }
		}
}

